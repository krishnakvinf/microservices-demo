plugins {
    id 'com.google.protobuf' version '0.8.19'
    id 'com.github.sherter.google-java-format' version '0.9'
    id 'idea'
    id 'application'
    id 'org.springframework.boot' version '2.6.0'
    id 'io.quarkus' version '2.6.2.Final' // Quarkus plugin
}

repositories {
    mavenCentral()
    mavenLocal()
}

description = 'Ad Quarkus Service'
group = "adquarkusservice"
version = "0.1.0-SNAPSHOT"

def grpcVersion = "1.42.0"
def jacksonCoreVersion = "2.16.0"
def jacksonDatabindVersion = "2.16.0"
def protocVersion = "3.25.1"

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_19
    targetCompatibility = JavaVersion.VERSION_19
}

ext {
    speed = project.hasProperty('speed') ? project.getProperty('speed') : false
    offlineCompile = new File("$buildDir/output/lib")
}

dependencies {
    if (speed) {
        implementation fileTree(dir: offlineCompile, include: '*.jar')
    } else {
        implementation "io.quarkus:quarkus-resteasy",
                "io.quarkus:quarkus-grpc",
                "io.quarkus:quarkus-resteasy-jsonb",
                "com.google.api.grpc:proto-google-common-protos:2.28.0",
                "javax.annotation:javax.annotation-api:1.3.2",
                "io.grpc:grpc-protobuf:${grpcVersion}",
                "io.grpc:grpc-stub:${grpcVersion}",
                "io.grpc:grpc-netty:${grpcVersion}",
                "io.grpc:grpc-services:${grpcVersion}",
                "io.grpc:grpc-census:${grpcVersion}",
                "org.apache.logging.log4j:log4j-core:2.22.0",
                "com.google.protobuf:protobuf-java:${protocVersion}",
                "io.quarkus:quarkus-bom:2.6.2.Final" // BOM (Bill of Materials) for Quarkus,
                "io.grpc:grpc-netty-shaded:${grpcVersion}" // gRPC dependencies

        runtimeOnly "com.fasterxml.jackson.core:jackson-core:${jacksonCoreVersion}",
                "com.fasterxml.jackson.core:jackson-databind:${jacksonDatabindVersion}",
                "io.netty:netty-tcnative-boringssl-static:2.0.62.Final"
    }
}

quarkus {
    version "2.6.2.Final"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
        ofSourceSet('main')
    }
}

googleJavaFormat {
    toolVersion '1.18.1'
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'hipstershop'
            srcDirs 'build/generated/source/proto/main/java/hipstershop'
            srcDirs 'build/generated/source/proto/main/grpc/hipstershop'
        }
    }
}

startScripts.enabled = false

// This to cache dependencies during Docker image building. First build will take time.
// Subsequent build will be incremental.
task downloadRepos(type: Copy) {
    from configurations.
    into offlineCompile
    from configurations.compileClasspath
    into offlineCompile
}

task adQuarkusService(type: CreateStartScripts) {
    mainClass.set('hipstershop.AdQuarkusServiceImpl')
    applicationName = 'AdQuarkusService'
    outputDir = new File(project.buildDir, 'E:\tmp')
    classpath = startScripts.classpath
    defaultJvmOpts =
             ["-agentpath:/opt/cprof/profiler_java_agent.so=-cprof_service=adservice,-cprof_service_version=1.0.0"]
}

task adQuarkusServiceClient(type: CreateStartScripts) {
    mainClass.set('hipstershop.AdQuarkusServiceClient')
    applicationName = 'AdQuarkusServiceClient'
    outputDir = new File(project.buildDir, 'E:\tmp')
    classpath = startScripts.classpath
    defaultJvmOpts =
             ["-agentpath:/opt/cprof/profiler_java_agent.so=-cprof_service=adserviceclient,-cprof_service_version=1.0.0"]
}

applicationDistribution.into('bin') {
    from(adQuarkusService)
    from(adQuarkusServiceClient)
    fileMode = 0755
}
compileClasspath